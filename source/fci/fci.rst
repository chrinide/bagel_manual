.. index:: fci

.. _fci:

************************************
Full configuration interaction (FCI)
************************************

===========
Description
===========
FCI describes the wavefunction as a linear combination of Slater determinants:

.. math::
  \Psi = \sum^{N}_{i}c_{i}\Phi_{N}

This technique is good for describing systems featuring substantial dynamic correlation. The algorithm by which the coefficients are determined, the number of states to calculate are two of the most important quantities to be specified.

This FCI section is closely connected to the :ref:`casscf` method.

==================
Prerequisites
==================

A reference wavefunction generated by some kind of :ref:`hf`, :ref:`casscf`, :ref:`fci`, or :ref:`rasci`-type calculation.

============
Keywords
============


.. topic:: ``frozen``

   | **Description**: To have frozen orbitals or not.
   | **Default**: true
   | **Datatype**: bool
   | **Recommendation**: Default, otherwise the basis for the CI expansion will become very large. 


.. topic:: ``norb``

   | **Description**: Number of orbitals into which electrons can be excited..
   | **Default**: Uses all possible orbitals
   | **Datatype**: integer
   | **Recommendation**: System dependent, the user should specify a value. Using all possible configurations is typically computationally expensive, and is best reserved for benchmarking calculations.

.. topic:: ``algorithm``
   
   | **Description**: Algorithm to be used in the determinantion of the CI coeffcients.
   | **Default**: KH.
   | **Datatype**: string
   | **Values**: 
   |    ``KH, Knowles, Handy``: Use Knowles-Handy.
   |    ``HZ, Harrison, Zarrabian``: Use Harrison-Zarrabian.
   |    ``Dist, parallel``: Use parallel algorithm.
   | **Recommendation**: If the active space is large and you have multiple processors, use Dist. Otherwise, use default.

.. topic:: ``charge``

   | **Description**: The electronic charge of the system.
   | **Default**:  0
   | **Datatype**: integer
   | **Values**: `Any integer`
   | **Recommendation**: The electronic charge of the system. 

.. topic:: ``maxiter_fci``

   | **Description**: Maximum number of iterations in FCI algorithm 
   | **Default**: 
   | **Datatype**: integer
   | **Values**: ``Any integer``
   | **Recommendation**: Becareful, a common mistake is to input the value s_z and not the number of electrons.

.. topic:: ``nspin``

   | **Description**: Number of unpaired electrons. 
   | **Default**: 0
   | **Datatype**: integer
   | **Values**: ``Any positive integer``
   | **Recommendation**: Becareful, a common mistake is to input the value s_z and not the number of electrons.

.. topic:: ``nstates``

   | **Description**: Number of states to calculate. 
   | **Default**:``must be specified``
   | **Datatype**: integer
   | **Values**: ``Any positive double``
   | **Recommendation**: User dependent, calculation of multiple states are slower.

.. topic:: ``restart``

   | **Description**: Restart the calcualtion from an earlier one. 
   | **Default**: false
   | **Datatype**: boolean
   | **Values**: ``true, false``
   | **Recommendation**: Use if possible.


.. topic:: ``thresh`` or ``thresh_fci``

   | **Description**: Threshold for convergence of selected CI algorithm 
   | **Default**: 1.0e-10 
   | **Datatype**: double
   | **Values**: ``Any positive double``
   | **Recommendation**: Default, reduce for greater accuracy.



=======
Example
=======
A Hartree-Fock and FCI calculation on a dioxygen molecule with a stretched bond. The HF calculation yield an energy and set of orbitals (in the hf_orbitals.molden) which are quite incorrect. This can be compared the energies and orbitals (output to fci_orbitals.molden) obtained from the FCI calculation. Please refer to :ref:`molden` for more information on the print input block.

Sample input
------------

.. code-block:: javascript 

   { "bagel" : [
   {
     "title" : "molecule",
     "basis" : "cc-pvdz",
     "df_basis" : "cc-pvdz-jkfit",
     "angstrom" : true,
     "geometry" : [
       { "atom" : "O",  "xyz" : [   -0.000000,     -0.000000,      1.5]},
       { "atom" : "O",  "xyz" : [   -0.000000,     -0.000000,      0.0]}
     ]
   },
   {
     "title" : "hf",
     "thresh" : 1.0e-10
   },

   { "title" : "print",
     "filename" : "hf_orbitals.molden",
     "orbitals" : true
   },

   {
     "title" : "fci",
     "algorithm" : "kh",
     "nstate" : 2
   },

   { "title" : "print",
     "filename" : "fci_orbitals.molden",
     "orbitals" : true
   }
   ]}


Sample output
-------------

.. code-block:: javascript 

  ---------------------------
        FCI calculation
  ---------------------------

  Performs exactly the same way as Knowles & Handy 1984 CPL

  o alpha-beta strings
      length:           990
  o size of the space
      determinant space:  245025
      spin-adapted space: 70785

  o single displacement lists (alpha)
      length:         19800
  o single displacement lists (beta)
      length:         19800
    * Integral transformation done. Elapsed time: 0.01

     guess   0:   closed 111111.1....         open ......1.1...

  === FCI iteration ===

      0  0      -149.42414775     1.22e-03      0.50
      1  0      -149.59892712     5.67e-04      0.48
      2  0      -149.63347311     2.03e-04      0.57
      3  0      -149.63748895     9.00e-05      0.56
      4  0      -149.63852095     4.82e-05      0.49
      5  0      -149.63871658     1.67e-05      0.71
      6  0      -149.63873281     5.08e-06      0.53
      7  0      -149.63873450     1.50e-06      0.53
      8  0      -149.63873466     5.12e-07      0.50
      9  0      -149.63873468     1.74e-07      0.48
     10  0      -149.63873468     6.26e-08      0.49
     11  0      -149.63873468     2.29e-08      0.51
     12  0      -149.63873468     7.27e-09      0.50
     13  0      -149.63873468     2.02e-09      0.60
     14  0      -149.63873468     6.22e-10      0.74
     15  0      -149.63873468     2.95e-10      0.85
     16  0      -149.63873468     1.11e-10      1.12
     17  0 *    -149.63873468     3.03e-11      0.40

     * ci vector, state   0, <S^2> = -0.0000
       222222a2b...    -0.6394413743
       222222b2a...    -0.6394413743
       2222a22b2...     0.2260112591
       2222b22a2...     0.2260112591
       22222.a2b2..     0.0924592521
       22222.b2a2..     0.0924592521
       2222ab22ba..     0.0754268550
       2222ba22ab..     0.0754268550
       22222aab2b..     0.0688206488
       22222bba2a..     0.0688206488
       2222a.2b22..     0.0675466768
       2222b.2a22..     0.0675466768




References
==========

+-----------------------------------------------+--------------------------------------------------------------------------+
|          Description of Reference             |                           Reference                                      | 
+===============================================+==========================================================================+
| Efficient calculation of matrix elements      | P\. J\. Knowles and N\. C\. Handy, **111**, 315-321, Chem. Phys.         |
| between different states.                     | Lett. 1984                                                               |        
+-----------------------------------------------+--------------------------------------------------------------------------+
| Efficient calculation of matrix elements      | R\. J\. Harrison and S\. Zarrabian, **158**, 5, Chem. Phys. Lett. 1989   | 
| between between different states.             |                                                                          |
+-----------------------------------------------+--------------------------------------------------------------------------+
| General reference for CI.                     | A\. Szabo and N\. S\. Ostlund, Modern Quantum Chemistry:                 |
|                                               | Introduction to Advanced Electronic Structure Theory, Dover Publications |
+-----------------------------------------------+--------------------------------------------------------------------------+
